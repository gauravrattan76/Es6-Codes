Abstract classes are base classes from which other classes can extend. They cannot be instantiated themselves (i.e.
you cannot do new Machine("Konda")).
The two key characteristics of an abstract class in TypeScript are:
1. They can implement methods of their own.
2. They can define methods that inheriting classes must implement.
For


abstract class Human { 
    age: number;
    constructor(age) { 
        this.age = age;
    }

    calAge() { 
        return `The age of the person is ${this.age}`
    }

    abstract play();
}

class Boy extends Human { 
    constructor(age) { 
        super(age);
    }

    play() { 
        return "We are implementing the abstrct methods";
    }
}

var bb = new Boy(23);
console.log(bb.calAge());
console.log(bb.play());
