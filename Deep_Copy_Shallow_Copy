Shallow-Copy-

Shallow copy is a bit-wise copy of an object. A new object is created that has an exact copy of the values in the original object. If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.

var pEmployee = {name:"gaurav",age:23,gender:"Male"};

var tEmployee =pEmployee;

console.log(pEmployee);
console.log(tEmployee);


pEmployee.age = 46;


console.log(pEmployee);
console.log(tEmployee);

Here the changes will be for both the objects.

This statement will also change name from employeeDetailsOriginal, since we have a shallow copy, or a reference to var employeeDetailsOriginal. This means, youâ€™re losing the original data as well.

__________________________________________________________________

Deep_Copy-

A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.

ar pEmployee = {name:"gaurav",age:23,gender:"Male"};

var tEmployee = {name:pEmployee.name,age:pEmployee.age,gender:pEmployee.gender};

console.log(pEmployee);
console.log(tEmployee);


pEmployee.age = 46;


console.log(pEmployee);
console.log(tEmployee);


Now if you change employeeDetailsDuplicate.name, it will only affect employeeDetailsDuplicate and not employeeDetailsOriginal
